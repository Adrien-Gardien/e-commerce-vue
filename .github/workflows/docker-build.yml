name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Test Frontend
        run: |
          cd frontend
          npm install
          npm run lint
          npm test -- --passWithNoTests

      - name: Test Services
        run: |
          cd services
          for service in */; do
            if [ -f "$service/package.json" ]; then
              cd $service
              echo "Testing $service"
              npm install
              npm run lint || true
              npm test -- --passWithNoTests || true
              cd ..
            fi
          done

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Frontend
        run: docker build -t frontend:${{ github.sha }} ./frontend

      - name: Build Services
        run: |
          cd services
          for service in */; do
            if [ -f "$service/Dockerfile" ]; then
              docker build -t ${service%/}:${{ github.sha }} ./$service
            fi
          done

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USERNAME: ${{ secrets.DEPLOY_USERNAME }}
        run: |
          echo "$DEPLOY_KEY" > deploy_key
          chmod 600 deploy_key
          scp -i deploy_key -o StrictHostKeyChecking=no docker-compose.prod.yml $DEPLOY_USERNAME@$DEPLOY_HOST:/opt/e-commerce/
          ssh -i deploy_key -o StrictHostKeyChecking=no $DEPLOY_USERNAME@$DEPLOY_HOST "cd /opt/e-commerce && docker-compose -f docker-compose.prod.yml up -d"
